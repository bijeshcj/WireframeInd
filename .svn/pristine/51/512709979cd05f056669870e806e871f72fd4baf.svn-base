package com.verizontelematics.indrivemobile.activity;

import android.app.Activity;
import android.app.SearchManager;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.widget.DrawerLayout;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.gcm.GoogleCloudMessaging;
import com.verizontelematics.indrivemobile.IndriveApplication;
import com.verizontelematics.indrivemobile.R;
import com.verizontelematics.indrivemobile.fragments.MenuFragment;
import com.verizontelematics.indrivemobile.utils.AppConstants;
import com.verizontelematics.indrivemobile.utils.GoogleAnalyticsUtil;
import com.verizontelematics.indrivemobile.utils.phone.SessionManager;

import java.io.IOException;
import java.util.concurrent.atomic.AtomicInteger;


public class MenuHomeActivity extends BaseFragmentActivity {
    private DrawerLayout mDrawerLayout;
    private ActionBarDrawerToggle mDrawerToggle;
    private CharSequence mTitle;
    private RelativeLayout mRelativeLayoutNavigation;
    AtomicInteger msgId = new AtomicInteger();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_menu_home);

        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
        ListView mDrawerList = (ListView) findViewById(R.id.left_drawer);
        mRelativeLayoutNavigation = (RelativeLayout) findViewById(R.id.navigation_drawer_rl);

        mTitle = getTitle();
        String[] mSlideMenuArray = getResources().getStringArray(R.array.slide_menu_array);
        mDrawerList.setAdapter(new ArrayAdapter<String>(this,
                R.layout.drawer_list_item, mSlideMenuArray));
        mDrawerList.setOnItemClickListener(new DrawerItemClickListener());

        setUpActionBar();

        setupActionBarDrawerToggle();

        if (savedInstanceState == null) {
            addFragment();
        }
        logOutAction();
        setup();

    }

    @Override
    public void onResume() {
        super.onResume();
        SessionManager.getInstance().start();
    }

    private void setup() {
        //AuthenticateController.instance().register(this);
    }

    private void cleanup() {
        //AuthenticateController.instance().unregister(this);
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        cleanup();
    }

    private void logOutAction() {

        TextView logOutTV = (TextView) findViewById(R.id.logoutBtn);
        logOutTV.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
                Intent loginIntent = new Intent(MenuHomeActivity.this, LoginActivity.class);
                loginIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(loginIntent);
            }
        });
    }

    private void setupActionBarDrawerToggle() {

        // ActionBarDrawerToggle ties together the the proper interactions
        // between the sliding drawer and the action bar app icon
        mDrawerToggle = new ActionBarDrawerToggle(
                this,                  /* host Activity */
                mDrawerLayout,         /* DrawerLayout object */
                R.drawable.android_navigation_left,  /* nav drawer image to replace 'Up' caret */
                R.string.drawer_open,  /* "open drawer" description for accessibility */
                R.string.drawer_close  /* "close drawer" description for accessibility */
        ) {
            public void onDrawerClosed(View view) {
                invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()
            }

            public void onDrawerOpened(View drawerView) {
                invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()
            }
        };
        mDrawerLayout.setDrawerListener(mDrawerToggle);
    }

    private void setUpActionBar() {

        // Setup Action bar
        android.support.v7.app.ActionBar mActionBar = getSupportActionBar();
        // Enable & Show Home button
        mActionBar.setDisplayHomeAsUpEnabled(true);
        mActionBar.setHomeButtonEnabled(true);
        mActionBar.setDisplayShowHomeEnabled(true);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.splash, menu);
        return super.onCreateOptionsMenu(menu);
    }

    /* Called whenever we call invalidateOptionsMenu() */
    @Override
    public boolean onPrepareOptionsMenu(Menu menu) {
        // If the nav drawer is open, hide action items related to the content view
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // The action bar home/up action should open or close the drawer.
        // ActionBarDrawerToggle will take care of this.
        if (mDrawerToggle.onOptionsItemSelected(item)) {
            return true;
        }
        // Handle action buttons
        switch (item.getItemId()) {
            case R.id.action_settings:
                // create intent to perform web search for this planet
                Intent intent = new Intent(Intent.ACTION_WEB_SEARCH);
                intent.putExtra(SearchManager.QUERY, getSupportActionBar().getTitle());
                // catch event that there's no activity to handle intent
                if (intent.resolveActivity(getPackageManager()) != null) {
                    startActivity(intent);
                } else {
                    Toast.makeText(this, "", Toast.LENGTH_LONG).show();
                }
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }

    /* The click listener for ListView in the navigation drawer */
    private class DrawerItemClickListener implements ListView.OnItemClickListener {
        @Override
        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
            switch (position) {
                case 0:
                    //Home
                    new GoogleAnalyticsUtil().trackEvents(IndriveApplication.getInstance(),getResources().getString(R.string.category_admin),
                            "AdminHome");
                    mDrawerLayout.closeDrawers();
                    break;
                case 1:
                    //App Settings
                    mDrawerLayout.closeDrawers();
                    new GoogleAnalyticsUtil().trackEvents(IndriveApplication.getInstance(),getResources().getString(R.string.category_admin),
                            "AdminAppSettings");
                    launchActivity(AppSettingsActivity.class);
                    break;
                case 2:
                    //Premium Services
                    mDrawerLayout.closeDrawers();
                    new GoogleAnalyticsUtil().trackEvents(IndriveApplication.getInstance(),getResources().getString(R.string.category_admin),
                            "AdminPremiumServices");
                    launchActivity(PremiumServicesActivity.class);
                    break;
                case 3:
                    //Customer Support
                    mDrawerLayout.closeDrawers();
                    new GoogleAnalyticsUtil().trackEvents(IndriveApplication.getInstance(),getResources().getString(R.string.category_admin),
                            "AdminCustomerSupport");
                    launchActivity(CustomerSupportActivity.class);
                    break;
                case 4:
                    //Profile Settings
                    mDrawerLayout.closeDrawers();
                    new GoogleAnalyticsUtil().trackEvents(IndriveApplication.getInstance(),getResources().getString(R.string.category_admin),
                            "AdminProfile");
                    launchActivity(ProfileActivity.class);
                    break;
                case 5:
                    //FAQ
                    mDrawerLayout.closeDrawers();
                    new GoogleAnalyticsUtil().trackEvents(IndriveApplication.getInstance(),getResources().getString(R.string.category_admin),
                            "AdminFaqs");
                    launchActivity(FAQActivity.class);
                    // below code added to test GCM by sending echo push from GCM server
                    // sendPush();
                    // you can uncomment and do self test.
                    break;
                default:
                    break;

            }


        }
    }

    private void sendPush() {
        new AsyncTask<Void, Void, String>() {
            @Override
            protected String doInBackground(Void... params) {
                String msg = "";
                try {
                    GoogleCloudMessaging gcm = GoogleCloudMessaging.getInstance(MenuHomeActivity.this);
                    Bundle data = new Bundle();
                    data.putString("my_message", "Hello World");
                    data.putString("my_action", "com.google.android.gcm.demo.app.ECHO_NOW");
                    String id = Integer.toString(msgId.incrementAndGet());
                    gcm.send(AppConstants.SENDER_ID + "@gcm.googleapis.com", id, data);
                    msg = "Sent message";
                } catch (IOException ex) {
                    msg = "Error :" + ex.getMessage();
                }
                return msg;
            }

            @Override
            protected void onPostExecute(String msg) {
                Toast.makeText(MenuHomeActivity.this, " message send "+msg, Toast.LENGTH_SHORT).show();
            }
        }.execute(null, null, null);
    }

    private void launchActivity(Class<? extends Activity> activityTypeClass) {

        Intent intent = new Intent(this, activityTypeClass);
        startActivity(intent);
    }

    private void addFragment() {
        Fragment fragment = new MenuFragment();
        FragmentManager fragmentManager = getSupportFragmentManager();
        fragmentManager.beginTransaction().replace(R.id.content_frame, fragment).commit();
        setTitle("Home");
        mDrawerLayout.closeDrawer(mRelativeLayoutNavigation);
    }

    @Override
    public void setTitle(CharSequence title) {
        mTitle = title;
        getSupportActionBar().setTitle(mTitle);
    }

    /**
     * When using the ActionBarDrawerToggle, you must call it during
     * onPostCreate() and onConfigurationChanged()...
     */

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        // Sync the toggle state after onRestoreInstanceState has occurred.
        mDrawerToggle.syncState();
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
        // Pass any configuration change to the drawer toggle
        mDrawerToggle.onConfigurationChanged(newConfig);
    }


}