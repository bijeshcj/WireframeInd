package com.verizontelematics.indrivemobile.controllers;

import android.content.Context;

import com.verizontelematics.indrivemobile.models.AppStateModel;
import com.verizontelematics.indrivemobile.models.BaseModel;
import com.verizontelematics.indrivemobile.models.data.AppStateData;
import com.verizontelematics.indrivemobile.models.data.Vehicle;
import com.verizontelematics.indrivemobile.utils.config.InDrivePreference;
import com.verizontelematics.indrivemobile.utils.phone.AppUtils;
import com.verizontelematics.indrivemobile.utils.ui.VehicleType;

/**
 * Created by z688522 on 8/28/14.
 */
public class AppController {

    private BaseModel mAppStateModel;
    private AppController() {
        mAppStateModel = new AppStateModel();
        mAppStateModel.setData(new AppStateData());
    }
    static private AppController mInstance = null;
    synchronized public static AppController instance() {
        if (mInstance ==  null) {
            mInstance = new AppController();
        }
        return mInstance;
    }

    public BaseModel getAppStateModel() {
        return mAppStateModel;
    }

    public void setVehicleType(int vehicleType) {
        ((AppStateData)mAppStateModel.getData()).set(AppStateData.VEHICLE_TYPE, vehicleType);
    }

    public int getVehicleType() {
        Object obj = ((AppStateData)mAppStateModel.getData()).get(AppStateData.VEHICLE_TYPE);
        return ((obj == null) ? 0 : (Integer) obj);
    }

    public void setMobileUserId(String mobileUserId) {
        if (mobileUserId.isEmpty()) {
            mobileUserId = InDrivePreference.getInstance().getStringData(AppStateData.MOBILE_USER_ID, "");
        }
        if (mobileUserId.isEmpty())
            return;
        ((AppStateData)mAppStateModel.getData()).set(AppStateData.MOBILE_USER_ID, mobileUserId);
        // stubbed logic for demo
        //setVehicleType(VehicleType.findByBodyType());
        InDrivePreference.getInstance().setStringData(AppStateData.MOBILE_USER_ID, mobileUserId);
    }

    public String getMobileUserId() {
        Object obj = ((AppStateData)mAppStateModel.getData()).get(AppStateData.MOBILE_USER_ID);
        String mobileUserId="";
        if (obj == null) {
            mobileUserId = InDrivePreference.getInstance().getStringData(AppStateData.MOBILE_USER_ID, "");
        }
        else {
            mobileUserId = (String) obj;
        }
        return mobileUserId;
    }

    public void setVehicle(Vehicle vehicle) {
        if (vehicle != null) {
            InDrivePreference.getInstance().setIntData(AppStateData.VEHICLE_TYPE, VehicleType.findByBodyType(vehicle.getBodyType()));
            InDrivePreference.getInstance().setStringData(AppStateData.VEHICLE_ID, vehicle.getVehicleID());
            ((AppStateData)mAppStateModel.getData()).set(AppStateData.VEHICLE_ID, vehicle.getVehicleID());
            ((AppStateData)mAppStateModel.getData()).set(AppStateData.VEHICLE_TYPE, VehicleType.findByBodyType(vehicle.getBodyType()));
        }
    }

    public String getVehicleId() {
        Object obj = ((AppStateData)mAppStateModel.getData()).get(AppStateData.VEHICLE_ID);
        String vehicleAccountId="";
        if (obj == null) {
            vehicleAccountId = InDrivePreference.getInstance().getStringData(AppStateData.VEHICLE_ID, "");
        }
        else {
            vehicleAccountId = (String) obj;
        }
        return vehicleAccountId;
    }

    public boolean getStayLoggedSetting() {
        Object obj = ((AppStateData)mAppStateModel.getData()).get(AppStateData.SETTING_STAY_LOGGED);
        boolean flag = false;
        if (obj == null) {
            flag = InDrivePreference.getInstance().getBooleanData(AppStateData.SETTING_STAY_LOGGED, false);
        }
        else {
            flag = (Boolean) obj;
        }
        return flag;
    }

    public void setStayLoggedSetting(boolean flag) {
        ((AppStateData)mAppStateModel.getData()).set(AppStateData.SETTING_STAY_LOGGED, flag);
        InDrivePreference.getInstance().setBooleanData(AppStateData.SETTING_STAY_LOGGED, flag);
    }

    public void setRememberMe(boolean flag) {
        ((AppStateData)mAppStateModel.getData()).set(AppStateData.SETTING_REMEMBER_ME, flag);
        InDrivePreference.getInstance().setBooleanData(AppStateData.SETTING_REMEMBER_ME, flag);
    }

    public boolean getRememberMe() {
        Object obj = ((AppStateData)mAppStateModel.getData()).get(AppStateData.SETTING_REMEMBER_ME);
        boolean flag = false;
        if (obj == null) {
            flag = InDrivePreference.getInstance().getBooleanData(AppStateData.SETTING_REMEMBER_ME, false);
        }
        else {
            flag = (Boolean) obj;
        }
        return flag;
    }

    public void setVehicleId(String vehicleId) {
        if (vehicleId.isEmpty()) {
            vehicleId = InDrivePreference.getInstance().getStringData(AppStateData.VEHICLE_ID, "");
        }
        if (vehicleId.isEmpty())
            return;
        ((AppStateData)mAppStateModel.getData()).set(AppStateData.VEHICLE_ID, vehicleId);
        // stubbed logic for demo
        //setVehicleType(VehicleType.findByBodyType());
        InDrivePreference.getInstance().setStringData(AppStateData.VEHICLE_ID, vehicleId);
    }

    public void setPassword(String password) {
        ((AppStateData)mAppStateModel.getData()).set(AppStateData.PASSWORD, password);
    }

    public String getPasword() {
        Object obj = ((AppStateData)mAppStateModel.getData()).get(AppStateData.PASSWORD);
        if (obj != null) {
            return (String)obj;
        }
        return "";
    }

    public String getAppId(Context ctx) {
        return ""+ AppUtils.getAppId(ctx);
    }

    public String getAccountIds() {
        Object obj = ((AppStateData)mAppStateModel.getData()).get(AppStateData.LINKED_ACCT_IDS);
        String accountIds="";
        if (obj == null) {
            accountIds = InDrivePreference.getInstance().getStringData(AppStateData.LINKED_ACCT_IDS, "");
        }
        else {
            accountIds = (String) obj;
        }
        return accountIds;
    }

    public void setAccountIds(String accountIds) {
        if (accountIds.isEmpty()) {
            accountIds = InDrivePreference.getInstance().getStringData(AppStateData.LINKED_ACCT_IDS, "");
        }
        if (accountIds.isEmpty())
            return;
        ((AppStateData)mAppStateModel.getData()).set(AppStateData.LINKED_ACCT_IDS, accountIds);
        // stubbed logic for demo
        //setVehicleType(VehicleType.findByBodyType());
        InDrivePreference.getInstance().setStringData(AppStateData.LINKED_ACCT_IDS, accountIds);
    }
}
