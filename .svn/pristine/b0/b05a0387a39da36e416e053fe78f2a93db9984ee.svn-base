package com.verizontelematics.indrivemobile.activity;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;

import com.verizontelematics.indrivemobile.R;
import com.verizontelematics.indrivemobile.controllers.AuthenticateController;
import com.verizontelematics.indrivemobile.controllers.MessageController;
import com.verizontelematics.indrivemobile.controllers.UIInterface;
import com.verizontelematics.indrivemobile.models.Operation;
import com.verizontelematics.indrivemobile.models.data.UserRegistrationData;

import java.util.Observable;
import java.util.Observer;

/**
 * Created by Bijesh on 30-03-2015.
 */
public class SplashIntermediateActivity extends Activity implements UIInterface, Observer {

    private static final String TAG = SplashIntermediateActivity.class.getCanonicalName();
    private UserRegistrationData mUserRegistrationData;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.dashboard);
        init();
    }

    private void init(){
        Handler handler = new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                mUserRegistrationData = AuthenticateController.instance().getUserRegistrationData();
                AuthenticateController.instance().getUserAccountVehicleDeviceInfo(SplashIntermediateActivity.this, mUserRegistrationData.getMobileUserID());
            }
        }, 700);

        AuthenticateController.instance().register(this);
        AuthenticateController.instance().getUserAccountVehicleDeviceInfoModel().addObserver(this);

    }

    private void cleanup() {
        AuthenticateController.instance().unregister(this);
        AuthenticateController.instance().getUserAccountVehicleDeviceInfoModel().deleteObserver(this);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        cleanup();
    }

    @Override
    public void update(Observable observable, Object data) {

    }

    @Override
    public void onProgress(Operation opr) {

    }

    @Override
    public void onError(Operation opr) {

    }

    @Override
    public void onSuccess(Operation opr) {
        Log.d(TAG,"onSucess");
        if (opr.getId() == Operation.OperationCode.GET_USER_ACCT_VECH_DEV_INFO.ordinal()) {
            this.finish();
        }
    }
}
