package com.verizontelematics.indrivemobile.activity;

import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.verizontelematics.indrivemobile.R;
import com.verizontelematics.indrivemobile.userprofile.UserRoleConstants;
import com.verizontelematics.indrivemobile.userprofile.utils.UserUtils;

public class AppSettingsActivity extends FragmentActivity implements UserRoleConstants, CompoundButton.OnCheckedChangeListener{
    private RadioGroup timePeriodOneRG;
    private RadioGroup timePeriodTwoRG;
    private RadioGroup categoryOneRG;
    private RadioGroup categoryTwoRG;

    private CheckBox chkBxPushNotifications;
    private CheckBox chkBxAutoUpdates;
    private CheckBox chkBxText;
    private CheckBox chkBxEmail;

    private RadioButton mRbtHalfMile;
    private RadioButton mRbtOneMile;
    private RadioButton mRbtTwoMiles;
    private RadioButton mRbtThisWeek;
    private RadioButton mRbtLastWeek;
    private RadioButton mRbtThisMonth;
    private RadioButton mRbtlastMonth;
    private RadioButton mRbtCustom;
    private RadioButton mRbtTotalMiles;
    private RadioButton mRbtMaxSpeed;
    private RadioButton mRbtAvgTrip;
    private RadioButton mRbtCarbonFprint;
    private RadioButton mRbtCityMpg;
    private RadioButton mRbtHighwayMpg;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_app_settings);
        setupUI();
    }

    private void setupUI() {
        setupHeaderView();
        timePeriodOneRG = (RadioGroup) this.findViewById(R.id.time_selection_layout);
        timePeriodTwoRG = (RadioGroup) this.findViewById(R.id.time_selection_layout_two);
        categoryOneRG = (RadioGroup) this.findViewById(R.id.category_selection_layout);
        categoryTwoRG = (RadioGroup) this.findViewById(R.id.category_selection_layout_two);

        chkBxPushNotifications = (CheckBox) findViewById(R.id.pushNotificationCB);
        chkBxAutoUpdates = (CheckBox) findViewById(R.id.autoUpdatesCB);
        chkBxText = (CheckBox) findViewById(R.id.textCB);
        chkBxEmail = (CheckBox) findViewById(R.id.emailCB);


        mRbtHalfMile = (RadioButton) findViewById(R.id.firstRB);
        mRbtOneMile = (RadioButton) findViewById(R.id.secondRB);
        mRbtTwoMiles = (RadioButton) findViewById(R.id.thirdRB);

        mRbtThisWeek = (RadioButton) findViewById(R.id.thisWeekRB);
        mRbtLastWeek = (RadioButton) findViewById(R.id.lastWeekRB);
        mRbtThisMonth = (RadioButton) findViewById(R.id.thisMonthRB);
        mRbtlastMonth = (RadioButton) findViewById(R.id.lastMonthRB);
        mRbtCustom = (RadioButton) findViewById(R.id.customRB);

        mRbtTotalMiles = (RadioButton) findViewById(R.id.thisWeekRB);
        mRbtMaxSpeed = (RadioButton) findViewById(R.id.thisWeekRB);
        mRbtAvgTrip = (RadioButton) findViewById(R.id.thisWeekRB);
        mRbtCarbonFprint = (RadioButton) findViewById(R.id.thisWeekRB);
        mRbtCityMpg = (RadioButton) findViewById(R.id.thisWeekRB);
        mRbtHighwayMpg = (RadioButton) findViewById(R.id.thisWeekRB);





        setUpListeners();

    }

    private void setUpListeners(){
        chkBxPushNotifications.setOnCheckedChangeListener(this);
        chkBxAutoUpdates.setOnCheckedChangeListener(this);
        chkBxText.setOnCheckedChangeListener(this);
        chkBxEmail.setOnCheckedChangeListener(this);

        mRbtHalfMile.setOnCheckedChangeListener(this);
        mRbtOneMile.setOnCheckedChangeListener(this);
        mRbtTwoMiles.setOnCheckedChangeListener(this);
//        mRbtThisWeek.setOnCheckedChangeListener(this);
//        mRbtLastWeek.setOnCheckedChangeListener(this);
//        mRbtThisMonth.setOnCheckedChangeListener(this);
//        mRbtlastMonth.setOnCheckedChangeListener(this);
//        mRbtCustom.setOnCheckedChangeListener(this);
//        mRbtTotalMiles.setOnCheckedChangeListener(this);
//        mRbtMaxSpeed.setOnCheckedChangeListener(this);
//        mRbtAvgTrip.setOnCheckedChangeListener(this);
//        mRbtCarbonFprint.setOnCheckedChangeListener(this);
//        mRbtCityMpg.setOnCheckedChangeListener(this);
//        mRbtHighwayMpg.setOnCheckedChangeListener(this);
    }

    private void setupHeaderView() {

        RelativeLayout headerRL = (RelativeLayout) this.findViewById(R.id.headerRL);
        headerRL.setBackgroundColor(this.getResources().getColor(R.color.gray));
//        headerRL.setBackgroundResource(R.drawable.diagnostic_header_background);
        TextView headerTitleTV = (TextView) headerRL.findViewById(R.id.title_header_TV);
        Button headerBtn = (Button) headerRL.findViewById(R.id.action_btn);
        headerTitleTV.setText(this.getResources().getString(R.string.app_settings));
        headerBtn.setVisibility(View.GONE);


    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_app_settings, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    public void radioButtonClick(View view) {
        if(UserUtils.isUserInactive(this,inactiveMessage)){
            return;
        }
//        boolean checked = ((RadioButton) view).isChecked();
        switch (view.getId()) {
            case R.id.thisWeekRB:
            case R.id.lastWeekRB:
            case R.id.thisMonthRB:
                timePeriodTwoRG.clearCheck();
                timePeriodOneRG.check(view.getId());
                break;

            case R.id.lastMonthRB:
            case R.id.customRB:
                timePeriodOneRG.clearCheck();
                timePeriodTwoRG.check(view.getId());
                break;

            case R.id.totalMilesRB:
            case R.id.maxSpeedRB:
            case R.id.avgTripRB:
                categoryTwoRG.clearCheck();
                categoryOneRG.check(view.getId());
                break;

            case R.id.carbonFootPrintRB:
            case R.id.cityMPGRB:
            case R.id.highwayMPGRB:
                categoryOneRG.clearCheck();
                categoryTwoRG.check(view.getId());
                break;

            default:
                break;


        }
    }



    @Override
    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
        if(UserUtils.isUserInactive(this,inactiveMessage)){
//            if(isChecked)
//                buttonView.setChecked(isChecked);
//            else
//                buttonView.setChecked(!isChecked);
            handleEvents(buttonView,isChecked);
            return;
        }

//        if(buttonView.getId() == R.id.pushNotificationCB){
//
//        }else if(buttonView.getId() == R.id.autoUpdatesCB){
//
//        }else if(buttonView.getId() == R.id.textCB){
//
//        }else if(buttonView.getId() == R.id.emailCB){
//
//        }
    }


    private void handleEvents(CompoundButton buttonView,boolean isChecked){
        if(buttonView instanceof CheckBox){
            if(isChecked)
                buttonView.setChecked(isChecked);
            else
                buttonView.setChecked(!isChecked);
        }
    }

}